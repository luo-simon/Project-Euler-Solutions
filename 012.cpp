// The sequence of triangle numbers is generated by adding the natural numbers. 
// So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. 
// The first ten terms would be: 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

// Let us list the factors of the first seven triangle numbers:

//  1: 1
//  3: 1,3
//  6: 1,2,3,6
// 10: 1,2,5,10
// 15: 1,3,5,15
// 21: 1,3,7,21
// 28: 1,2,4,7,14,28
// We can see that 28 is the first triangle number to have over five divisors.

// What is the value of the first triangle number to have over five hundred divisors?

// Formula = [n(n+1)] / 2

#include <iostream>
#include <cmath>
using namespace std;

int calculateDivisors(int x);

int main(){
    int triangleNumber;
    int n = 1;
    int divisors = 1;
    while (divisors < 500){
        triangleNumber = (n*(n+1))/2;
        divisors = calculateDivisors(triangleNumber);
        n++;
    }
    cout << triangleNumber << endl;
    return 0;
}

int calculateDivisors(int x){
    int count = 0;
    int root = sqrt(x);
    for (int i = 1; i <= root; i++){
        if (x % i == 0){
            count += 2;
        }
    }
    if (x == root * root){
        count--;
    }
    return count;
}