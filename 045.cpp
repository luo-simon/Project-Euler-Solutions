// Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:

// Triangle	 	    Tn=n(n+1)/2	 	1, 3, 6, 10, 15, ...
// Pentagonal	 	Pn=n(3n−1)/2	1, 5, 12, 22, 35, ...
// Hexagonal	 	Hn=n(2n−1)	 	1, 6, 15, 28, 45, ...
// It can be verified that T285 = P165 = H143 = 40755.

// Find the next triangle number that is also pentagonal and hexagonal.

#include <iostream>
#include <time.h>
#include "useful.h"

using namespace std;

int main(){
    clock_t tStart = clock();

    for (int n = 144; ; n++){
        unsigned int h = n * (2*n - 1); 

        // Note: every hexagonal number is a triangular number
        if (isPentagonal(h)){
            cout << h << ", " << n << endl;
            printf("Time taken: %.3fs\n", (double)(clock() - tStart)/CLOCKS_PER_SEC);
            return 0;
        }
    }
    cout << "Triangle number not found. Consider increasing max iterations" << endl;
    printf("Time taken: %.3fs\n", (double)(clock() - tStart)/CLOCKS_PER_SEC);
    return 0;
   
}