// Consider all integer combinations of ab for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5:

// 2^2=4, 2^3=8, 2^4=16, 2^5=32
// 3^2=9, 3^3=27, 3^4=81, 3^5=243
// etc
// If they are then placed in numerical order, with any repeats removed, we get the following sequence of 15 distinct terms:

// 4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125

// How many distinct terms are in the sequence generated by ab for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?

#include <iostream>
#include <set>
#include <cmath>
#include "InfInt.h"
#include <time.h>

using namespace std;

int main(){
    clock_t tStart = clock();

    set<InfInt> terms;
    for (int a = 2; a <= 100; a++){
        for (int b = 2; b <= 100; b++){
            InfInt n = 1;
            for (int i = 0; i < b; i++){
                n *= a;
            }
            terms.insert(n);
        }
    }
    cout << terms.size() << endl;

    printf("Time taken: %.3fs\n", (double)(clock() - tStart)/CLOCKS_PER_SEC);
    return 0;
}